/*
IF rotated adjacent elements will be the first and last and hence check that and move on

https://practice.geeksforgeeks.org/problems/check-if-a-given-string-is-a-rotation-of-a-palindrome0317/1


*/

class Solution{
public:
	
	int isRotatedPalindrome(string s)
	{
	    // code here
	    
	    for(int i = 0 ; i < s.size() ; i++){
	        int l = i ; int r = (i+1)%s.size();
	        int count = 0;
	        while((s[l] == s[r]) && l!= r && (count < s.size())){
	            //cout<<l<<" "<<r<<endl;
	            count = count + 2;
	            r = (r + 1) % s.size();
	            if(l == 0){
	                l = s.size()-1;
	            } else {
	                l--;
	            }
	        }
	        
	        if(l == r || count >= s.size()){
	            return 1;
	        }
	    }
	   return 0; 
	}
};
