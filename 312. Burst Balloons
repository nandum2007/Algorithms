

class Solution {
public:
    
    unordered_map<string,int>map;
    
    int get_max(vector<int>& nums,int l , int r){
        int maxi = 0;
        int curr;
        string key = to_string(l)+","+to_string(r);
        if(map.find(key) == map.end()){
        
        //During each iteration, we choose the baloon that will be the last to be burst. ie 'i' 
        
        for(int i = l+1 ; i < r ; i++ ){
             curr = nums[l]*nums[i]*nums[r];
            
             maxi = max(maxi,curr+get_max(nums,l,i)+get_max(nums,i,r));
        }
          
            map[key] = maxi;
        }
        
        return map[key];
    }
    
    
    int maxCoins(vector<int>& nums) {
        
        nums.insert(nums.begin(),1);
        nums.push_back(1);
        
        return get_max(nums,0,nums.size()-1);
        
        
        
    }
};
